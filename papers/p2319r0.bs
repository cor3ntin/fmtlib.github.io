<pre class='metadata'>
Title: Terminal utilities
Shortname: D2319
Revision: 0
Audience: LEWG
Status: D
Group: WG21
URL:
Editor: Victor Zverovich, victor.zverovich@gmail.com
No abstract: true
Date: 2021-02-15
Markup Shorthands: markdown yes
</pre>

<p style="text-align: right">
"We are all terminal." <br>
― Jack Kevorkian
</p>

During one of the reviews of [[P2093]] it has been suggested that it might be
useful to also have low-level functions for working with a terminal. This paper
proposes such functions which do the following:

* Test whether a file descriptor refers to a terminal.
* Write Unicode text to a terminal.

Question: which header should these go to?

Wording {#wording}
=======

Add to the relevant header:

<pre>
<ins>
[[nodiscard]] bool is_terminal(FILE* stream);
void write_unicode(FILE* stream, string_view str);
</ins>
</pre>

<pre>
<ins>
[[nodiscard]] bool is_terminal(FILE* stream);
</ins>
</pre>
<ins>
<span class="parnum">1</span> *Returns:* 
whether `stream` refers to a terminal. [ Note: On POSIX and Windows meaning that
`isatty(fileno(stream))` and `GetConsoleMode(_get_osfhandle(_fileno(stream)), ...)`
return nonzero respectively. — end note ]
</ins>
<p>
<ins>
*Throws:* As specified in [[format.err.report](
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4861.pdf#subsection.20.20.3)]
or `system_error` if a call by the implementation to an operating system or
other underlying API results in an error that prevents the function from meeting
its specifications.
</ins>
</pre>

<pre>
<ins>
void write_unicode(FILE* stream, string_view str);
</ins>
</pre>
<ins>
<span class="parnum">2</span> *Effects:* 
If `is_terminal(stream)` is `true`, writes UTF-8 encoded `str` to the terminal
using the native Unicode API if possible. [ Note: On Windows this API
is `WriteConsoleW`. — end note ] If this requires transcoding then invalid code
points are substituted with  U+FFFD � REPLACEMENT CHARACTER. Otherwise writes
`str` to `stream` unchanged.
</ins>
<p>
<ins>
*Throws:* As specified in [[format.err.report](
http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/n4861.pdf#subsection.20.20.3)]
or `system_error` if a call by the implementation to an operating system or
other underlying API results in an error that prevents the function from meeting
its specifications.
</ins>
</pre>

<pre class=biblio>
{
  "P2093": {
    "title": "Formatted output",
    "authors": ["Victor Zverovich"],
    "href": "https://wg21.link/p2093"
  }
}
</pre>
